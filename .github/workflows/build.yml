# This workflow will do a clean install of node dependencies, build the source
# code across multiple Node.js versions, and format the project.

name: Build & Format

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  node-version: "16" # Default version of Node.js for jobs, Webpack on Node 18 has an error with hashing as of 2022-09-03
  # For details: https://stackoverflow.com/questions/69394632/webpack-build-failing-with-err-ossl-evp-unsupported/69394785#69394785
  path: "KoLmafia" # The directory where your assets are generated, should match webpack.config.js

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build
        run: yarn run build

      #- run: yarn run test # Uncomment and run tests here when implemented in package.json

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      - name: Install Dependencies
        run: yarn install --immutable

      - name: ESformat & Prettier
        run: yarn run format

  push:
    runs-on: ubuntu-latest
    needs: [test, format]
    if: github.ref == 'refs/heads/main' # Only runs on commits to the main branch
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build
        run: yarn run build

      - name: Push to Release
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: release
          FOLDER: ${{ env.path }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg}" # The commit hash and message that prompted this workflow
          SKIP_EMPTY_COMMITS: true
